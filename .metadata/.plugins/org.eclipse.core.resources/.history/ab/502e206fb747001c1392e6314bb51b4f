package Frame;

import java.awt.Color;
import java.awt.Image;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.DecimalFormat;

import javax.swing.BorderFactory;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JCheckBox;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTextArea;
import javax.swing.JTextField;

import DBInterface.DBInterface;

public class PurchaseFrame extends JFrame {
	private int p_no;
	private JPanel p = new JPanel(null);
	private JLabel img = new JLabel();
	private JTextField pName = new JTextField();
	private JTextField pPrice = new JTextField();
	private JCheckBox check1 = new JCheckBox("10% 할인 쿠폰 적용");
	private JCheckBox check2 = new JCheckBox("30% 할인 쿠폰 적용");
	private JTextField pStock = new JTextField();
	private JTextArea pExplanation = new JTextArea();
	private JButton submitBtn = new JButton("구매하기");
	private JButton cancelBtn = new JButton("취소하기");
	private JScrollPane listScroll = new JScrollPane();
	private JLabel label1 = new JLabel("제품명");
	private JLabel label2 = new JLabel("가격");
	private JLabel label3 = new JLabel("수량");
	private JLabel label4 = new JLabel("상품설명");
	private JLabel label5 = new JLabel("같은 카테고리 목록");
	
	public PurchaseFrame(int p_no) {
		setTitle("구매");
		setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
		this.p_no = p_no;
		formDesign();
		eventHandler();
		setSize(500, 500);
		setVisible(true);
	}
	
	public void formDesign() {
		findProduct(p_no);
		
		add(p);
		p.add(img);
		img.setBounds(5, 5, 200, 200);
		
		p.add(label1);
		label1.setBounds(200, 15, 50, 20);
		p.add(pName);
		pName.setBounds(250, 10, 200, 30);
		
		p.add(label2);
		label2.setBounds(200, 65, 50, 20);
		p.add(pPrice);
		pPrice.setBounds(250, 60, 200, 30);
		
		p.add(check1);	p.add(check2);
		check1.setBounds(200, 110, 100, 20);
		check2.setBounds(300, 110, 100, 20);
		
		p.add(label3);
		label3.setBounds(170, 160, 50, 20);
		
		p.add(label4);
		label4.setBounds(5, 160, 50, 20);
		p.add(pExplanation);
		pExplanation.setBounds(5, 180, 300, 100);
		pExplanation.setLineWrap(true);
		pExplanation.setBorder(BorderFactory.createLineBorder(Color.black));
	}
	
	public void eventHandler() {
		
	}
	
	public void findProduct(int p_no) {
		try {
			ResultSet rs = DBInterface.stmt.executeQuery("select * from product where p_no='" + p_no + "'");
			
			if (rs.next()) {
				Image imgIcon = new ImageIcon("datafile/이미지/" + rs.getString(3) + ".jpg").getImage().getScaledInstance(150, 150, Image.SCALE_DEFAULT);
				img.setIcon(new ImageIcon(imgIcon));
				
				pName.setText(rs.getString(3));
				pPrice.setText(new DecimalFormat("###,###").getInstance().format(rs.getInt(4)));
				
				pExplanation.setText(rs.getString(6));
			}
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
}
